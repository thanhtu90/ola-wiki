openapi: 3.0.1
info:
  title: Ola API
  description: API for Ola System
  version: 1.0.0
paths:
  /orders:
    get:
      summary: Get orders with filters and pagination
      operationId: getOrders
      tags:
        - orders
      parameters:
        - name: terminalId
          in: query
          required: false
          description: Filter by terminal ID
          schema:
            type: string
        - name: fromTimestamp
          in: query
          required: false
          description: Filter orders starting from this timestamp
          schema:
            type: string
            format: date-time
        - name: locationId
          in: query
          required: false
          description: Filter by location ID
          schema:
            type: integer
        - name: page
          in: query
          required: false
          description: Page number for pagination
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          required: false
          description: Number of orders per page for pagination
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  current_page:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 5
                  per_page:
                    type: integer
                    example: 10
    post:
      summary: Create an order
      operationId: createOrder
      tags:
        - orders
      requestBody:
        description: Order object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '200':
          description: Successful operation
  /orders/{id}:
    get:
      summary: Get an order by ID
      operationId: getOrderById
      tags:
        - orders
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the order to return
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
    put:
      summary: Update an existing order
      operationId: updateOrder
      tags:
        - orders
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the order to update
          schema:
            type: integer
      requestBody:
        description: Order object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '200':
          description: Successful operation
        '404':
          description: Order not found
    delete:
      summary: Delete an order
      operationId: deleteOrder
      tags:
        - orders
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the order to delete
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Order not found
components:
  schemas:
    Item:
      type: object
      properties:
        amountOnHand:
          type: integer
        cost:
          type: number
          format: float
        description:
          type: string
        group:
          type: integer
        id:
          type: integer
        largeImage:
          type: string
        lastMod:
          type: integer
        notes:
          type: string
        price:
          type: number
          format: float
        smallImage:
          type: string
        taxRate:
          type: number
          format: float
        taxable:
          type: integer
        upc:
          type: string

    Mod:
      type: object
      properties:
        amountOnHand:
          type: integer
        cost:
          type: number
          format: float
        description:
          type: string
        group:
          type: integer
        id:
          type: integer
        largeImage:
          type: string
        lastMod:
          type: integer
        notes:
          type: string
        price:
          type: number
          format: float
        smallImage:
          type: string
        taxRate:
          type: number
          format: float
        taxable:
          type: integer
        upc:
          type: string

    OrderItem:
      type: object
      properties:
        cost:
          type: number
          format: float
        description:
          type: string
        discount:
          type: number
          format: float
        group:
          type: integer
        id:
          type: integer
        itemAddedDateTime:
          type: string
        itemId:
          type: integer
        lastMod:
          type: integer
        notes:
          type: string
        orderReference:
          type: integer
        price:
          type: number
          format: float
        qty:
          type: integer
        status:
          type: string
        taxAmount:
          type: number
          format: float
        taxable:
          type: integer

    Order:
      type: object
      properties:
        employeeId:
          type: integer
        id:
          type: integer
        lastMod:
          type: integer
        notes:
          type: string
        orderDate:
          type: string
        orderName:
          type: string
        status:
          type: string
        subTotal:
          type: number
          format: float
        tax:
          type: number
          format: float
        total:
          type: number
          format: float
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'

    Group:
      type: object
      properties:
        description:
          type: string
        groupType:
          type: string
        id:
          type: integer
        lastMod:
          type: integer
        notes:
          type: string

    ItemData:
      type: object
      properties:
        amountOnHand:
          type: integer
        cost:
          type: number
          format: float
        description:
          type: string
        group:
          type: integer
        id:
          type: integer
        largeImage:
          type: string
        lastMod:
          type: integer
        notes:
          type: string
        price:
          type: number
          format: float
        smallImage:
          type: string
        taxRate:
          type: number
          format: float
        taxable:
          type: integer
        upc:
          type: string

    OrderItemWrapper:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/Item'
        mods:
          type: array
          items:
            $ref: '#/components/schemas/Mod'
        orderItem:
          $ref: '#/components/schemas/OrderItem'

    OrderRequest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemWrapper'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
        termId:
          type: string
